///////////////////////////////////////////////////////////
//  ConnectivityNode.cs
//  Implementation of the Class ConnectivityNode
//  Generated by Enterprise Architect
//  Created on:      24-Aug-2016 11:29:39 PM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using CIM.IEC61970.Base.Core;
using System.Xml.Serialization;

namespace CIM.IEC61970.Base.Core {
    /// <summary>
    /// Connectivity nodes are points where terminals of AC conducting equipment are
    /// connected together with zero impedance.
    /// </summary>
    [Serializable]
    public class ConnectivityNode : IdentifiedObject {

        public BaseVoltage m_BaseVoltage { get; set; }
        public List<Terminal> Terminals = new List<Terminal>();
        private int clonedItems = 0;

        public ConnectivityNode()
        {

        }

        ~ConnectivityNode()
        {

        }

        public override string ToString()
        {
            return name + " " + m_BaseVoltage.ToString();
        }

        public override object Clone()
        {
            clonedItems += 1;
            ConnectivityNode copy = new ConnectivityNode();

            copy.mRID = Guid.NewGuid().ToString();
            copy.name = String.Copy(name) + "Copy" + clonedItems.ToString();
            foreach (Terminal ter in this.Terminals)
            {
                copy.Terminals.Add(ter);
            }

            copy.m_BaseVoltage = this.m_BaseVoltage;

            return copy;
        }

    }//end ConnectivityNode

}//end namespace Core